<?php

namespace ierusalim\Random;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-10 at 09:06:50.
 */
class RandomJsonTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var RandomJson
     */
    protected $object;

    /**
      * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RandomJson;
    }

    /**
     * @covers ierusalim\Random\RandomJson::genRandomJson
     * @todo   Implement testGenRandomJson().
     */
    public function testGenRandomJson()
    {
        $g = $this->object;
        $g->setKeysModel();
        $g->setValuesModel();
        $lim_elem = 1000;
        for($t=0;$t<10;$t++) {
            $file_name = $g->genRandomJson(10,10,32768,3,$lim_elem);
            $this->assertNotEmpty($file_name);
            $this->assertFileExists($file_name);
            $file_size = filesize($file_name);
            $this->assertGreaterThan(100,$file_size);
            $json_raw = file_get_contents($file_name);
            $this->assertEquals(strlen($json_raw), $file_size);
            $this->assertJson($json_raw);
            $arr = json_decode($json_raw, true);
            $this->assertTrue(is_array($arr));
            $this->assertEquals(count($arr),10);
            $d = $g->countArrayMaxDepth($arr);
            unlink($file_name);
            if($d == 2) break;
        }
        $this->assertTrue($t<3);
    }
}
