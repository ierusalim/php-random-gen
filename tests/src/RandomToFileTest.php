<?php

namespace ierusalim\Random;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-09 at 20:30:58.
 */
class RandomToFileTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var RandomToFile
     */
    protected $object;

    /**
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RandomToFile;
    }

    /**
     * @covers ierusalim\Random\RandomToFile::genRandomToFile
     * @todo   Implement testGenRandomToFile().
     */
    public function testGenRandomToFile()
    {
        $file_name = $this->object->setOutputFile();

        $this->object->genRandomToFile();

        require $file_name;
        
        $this->assertTrue(\is_array($x));
        \unlink($file_name);
        
        $this->assertFalse(is_file($file_name));
        
        $this->object->genRandomToFile(100,100,0);
        
        require $file_name;
        
        $this->assertTrue(\is_array($x));
        $this->assertEquals(count($x),100);
        
        $on_cnt = 10;
        $elim = 1000;
        $this->object->genRandomToFile($on_cnt, $on_cnt, 32768, 3, $elim);
        
        require $file_name;
        $arr = $x;
        
        $c = $this->object->countArrayValuesRecursive($arr);
        $this->assertTrue($c > $on_cnt);
        $this->assertTrue($c <= $elim);
        $d = $this->object->countArrayMaxDepth($arr);
        $this->assertEquals($d, 2);
        
        \unlink($file_name);
        
    }

    /**
     * @covers ierusalim\Random\RandomToFile::genTempFileName
     * @todo   Implement testGenTempFileName().
     */
    public function testGenTempFileName()
    {
        $ext = '.txt';
        $file_name = $this->object->genTempFileName($ext);
        
        $this->assertEquals(substr($file_name,-strlen($ext)), $ext);
        
        $f = \fopen($file_name, 'w');
        $this->assertFalse(! $f);
        $this->assertEquals(3, \fwrite($f,'abc'));
        \fclose($f);
        unlink($file_name);
    }

    /**
     * @covers ierusalim\Random\RandomToFile::setOutputFile
     * @todo   Implement testSetOutputFile().
     */
    public function testSetOutputFile()
    {
        $file_name = $this->object->setOutputFile();
        $this->assertNotEmpty($file_name);
    }
}
